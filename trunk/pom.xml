<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <!--
  $Date: 2007/11/13 13:46:02 $
  $Revision: 1.12 $
  $HeadURL$

  Copyright 2007 - $Date: 2007/11/13 13:46:02 $ by PeopleWare n.v.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  -->


  <!-- NOTE: you probably have to give Maven more memory:
             export MAVEN_OPTS=-Xmx1024M -->

  <!-- MUDO add version nr (spec / impl) to manifest -->

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.ppwcode.vernacular</groupId>
    <artifactId>ppwcode-vernacular-parent-pom</artifactId>
    <version>1.0.0-SNAPSHOT</version>
  </parent>

  <properties>
    <!-- The short artifact name. The real artifact name is calculated from the ppwcode.libraryKind,
         this short name, and the ppwcode.markVersion -->
    <ppwcode.shortArtifactName>semantics</ppwcode.shortArtifactName>
    <!-- The mark version of the artifact. This part of the version becomes part of the artifactId.
         For this pom, an empty mark version is used, which results in "double slash in paths", which works. -->
    <ppwcode.markVersion>I</ppwcode.markVersion>
  </properties>


  <!-- GROUP ID, VERSION, PACKAGING, NAME & DESCRIPTION: OVERWRITE IN YOUR CHILD POM (know what you are doing :-) ) -->
  <!-- for ppwcode projects, groupId and artifactId are calculated, and used in the magic mantra (see below) -->
  <version>1.0.0-SNAPSHOT</version> <!-- MUDO add Svn release number as implementation version -->
  <packaging>jar</packaging>
  <name>ppwcode semantics vernacular</name>
  <description>Framework, guidelines, support for developing the semantic layer of a business application.</description>

  <!-- MAGIC MANTRA -->
  <!-- The following entries need to be repeated, and can not sensibly be inherited.
       The reason is, sadly, that Maven 2 has a built in, undocumented "feature" that appends the artifact id to a number of URL's and paths
       if those URL's or paths are inherited. The reasoning behind that is he use of inheritance inside multi-module projects.
       It seems that if you are using inheritance outside of multi-module projects, you are out of luck.
       At least, we are :-(.  -->
  <groupId>${ppwcode.groupId}</groupId> <!-- note: group id cannot be inherited, ever -->
  <artifactId>${ppwcode.artifactId}</artifactId>
  <url>${ppwcode.url}</url>
  <scm>
    <connection>${ppwcode.scm.connection}</connection>
    <developerConnection>${ppwcode.scm.developerConnection}</developerConnection>
    <url>${ppwcode.scm.url}</url>
  </scm>
  <distributionManagement>
    <site>
      <id>${ppwcode.distributionManagement.site.id}</id>
      <name>${ppwcode.distributionManagement.site.name}</name>
      <url>${ppwcode.distributionManagement.site.url}</url>
    </site>
  </distributionManagement>

  <!-- THIS NEEDS TO BE COPIED IN ALL CHILD POMS, TO FIND THE PARENT -->
  <repositories>
    <repository>
      <id>ppwcodeRepo</id>
      <name>ppwcode Maven 2 repository</name>
      <url>http://www.ppwcode.org/java/maven2repo</url>
    </repository>
    <repository>
      <id>ppwcodeSnapshotRepo</id>
      <!-- This needs to be copied in all child poms, to find the parent -->
      <name>ppwcode Maven 2 snapshot repository</name>
      <url>http://www.ppwcode.org/java/maven2snapshotrepo</url>
    </repository>
  </repositories>

  <!-- activating dependencies used in this project. Versions are choosen in the grandparent pom -->
  <dependencies>
    <dependency>
      <groupId>org.ppwcode</groupId>
      <artifactId>ppwcode-metainfo-I</artifactId>
    </dependency>
    <dependency>
      <groupId>org.toryt</groupId>
      <artifactId>Toryt-annotations-I</artifactId>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-beanutils</groupId>
      <artifactId>commons-beanutils-core</artifactId>
    </dependency>
     <dependency>
       <groupId>commons-logging</groupId>
       <artifactId>commons-logging-api</artifactId>
     </dependency>
     <dependency>
       <groupId>org.ppwcode.util</groupId>
       <artifactId>ppwcode-util-reflection-I</artifactId>
     </dependency>
     <dependency>
       <groupId>org.ppwcode.vernacular</groupId>
       <artifactId>ppwcode-vernacular-exception-II</artifactId>
     </dependency>
  </dependencies>

  <!-- More Project Information -->
  <!--
  <developers>
    <developer>
      <name>Jan Dockx</name>
      <id>jandockx</id>
      <email>jandockx@gmail.org</email>
      <timezone>+1</timezone>
      <organization>PeopleWare n.v.</organization>
      <organizationUrl>http://www.peopleware.be/</organizationUrl>
      <roles>
        <role>architect</role>
        <role>developer</role>
      </roles>
      <properties>
        <aim>jandockx@mac.com</aim>
        <skype>callto:jandockx</skype>
      </properties>
    </developer>
  </developers>
  <contributors>
  </contributors>
  -->

</project>
