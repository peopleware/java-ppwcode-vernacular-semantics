/*
  Copyright 2012 - $Date $ by PeopleWare n.v.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
*/

/*
  Vertical position is controlled by using full-width block-elements, e.g., .formRow.
  These elements should have a definite height, expressed relative to the font (e.g., ex or em).
  All these block-elements should be set to a height that includes all their children effectively.

  Horizontal positioning is done with absolute positioning, on px basis, within the block-elements
  that control vertical positioning. The absolute positioning anchor is the semantic object pane,
  or LayoutContainer children used in the semantic object pane. This will have a definite width.

  Tabs are imagined at 10px and 90px, and a right tab at -10px from the right.
*/

.SemanticObjectPane {
  /* fix reference font-size and line-height for stuff in SemanticObjectpanes */
  font-size: 16px;
  line-height: 1.2; /* the default of most browsers; but enforce because in .secondary we depend on it */
}

/* <editor-fold desc="Fields"> */

.SemanticObjectPane .dijitContentPane {
  padding: 0;
}

.SemanticObjectPane div.formRow {
  /*position: relative;*/
  padding-top: 0;
  padding-bottom: 0;
  height: 3.4ex;
}

.SemanticObjectPane .dijitTextBoxReadOnly,
.SemanticObjectPane .dijitValidationTextBoxReadOnly,
.SemanticObjectPane .dijitSelectReadOnly {
  border: 1px solid transparent !important;
  background-color: transparent !important;
}

.SemanticObjectPane .dijitTextBoxReadOnly input,
.SemanticObjectPane .dijitValidationTextBoxReadOnly input {
  white-space: nowrap; /* TODO this will never work on an input as an inline element, will it?
                               For ellipsis, we need a block. */
  overflow: hidden;
  text-overflow: ellipsis;
}

.SemanticObjectPane .formRow .dijitSelectReadOnly .dijitButtonNode {
  display: none;
}

.SemanticObjectPane .formRow .dijitSelectReadOnly .dijitButtonContents {
  border-right-style: none;
}

.SemanticObjectPane .formRow .dijitCheckBox {
  margin-left: 3px;
}

.SemanticObjectPane .identifyingField {
  font-weight: bold;
  font-size: 150%;
  width: 99%;
  margin-bottom: 0.5ex;
}

/* A "secondary" shows secondary identifying information, in a smaller font, gray, to the right.
   It is intended for other content in the encompassing block to flow around it, if the other content gets large enough.
   The "secondary" entry is intended to be short, and to text-align the base line with the first line of the other
   content. We use float: right, with an explicit top margi, to get this. The top margin is measured to be next to
   an .identifyingField.
   The maximum width will be 50% of the parent, and this is forced to be 1 line. Overflow is shown with an ellipsis. */
.SemanticObjectPane .secondary {
  color: gray;
  font-size: 75%;
  float: right;
  /* To have the baseline of .secondary aligned with the baseline of the first line of .identifying field, we
     add padding to the top of .secondary. There are no borders and no top margin or top padding on .identifying field
     or .secondary, and no bottom margin or padding on .secondary. So, we can assume that the height of .secondary
     equals its line-height, and that the baseline of .identifyingField is its line height below the top of
     .identifyingField:
     line-height of .identifyingField : 150% of 16px * 1.2 = 28.8px
     line-height of .secondary: 75% of 16px * 1.2 = 14.4px
     A top padding of 28.8px - 14.4px = 14.4px should align the base lines.

     And that doesn't work either: the baseline isn't the bottom: look at the g, y, p, q (descenders).

     So, it's trial and error. But is this cross-browsers and cross-platform?
     */
  padding-top: 10.5px;
  max-width: 50%;
  display: block; /* only thing that makes sense for a float; necessary to make ellipsis work */
  white-space: nowrap;
  overflow: hidden; /* necessary to make ellipsis work */
  text-overflow: ellipsis;
}

.SemanticObjectPane .fillToLeft,
.SemanticObjectPane .afterLabel,
.SemanticObjectPane .fillToRight,
/* extra mentions necessary to force text boxes to listen */
.SemanticObjectPane .dijitTextBox.fillToLeft,
.SemanticObjectPane .dijitTextBox.afterLabel,
.SemanticObjectPane .dijitTextBox.fillToRight {
  position: absolute;
  width: inherit !important;
  line-height: 3.2ex;
}

.SemanticObjectPane .fillToLeft,
/* extra mentions necessary to force text boxes to listen */
.SemanticObjectPane .dijitTextBox.fillToLeft,
.SemanticObjectPane label.fixedLabel {
  left: 10px;
}

.SemanticObjectPane .afterLabel,
/* extra mentions necessary to force text boxes to listen */
.SemanticObjectPane .dijitTextBox.afterLabel {
  left: 90px; /* see fixedLabel */
}

.SemanticObjectPane .fillToRight,
/* extra mentions necessary to force text boxes to listen */
.SemanticObjectPane .dijitTextBox.fillToRight {
  right: 10px;
}

.SemanticObjectPane .dojoxCheckedMultiSelectHidden {
  display: none;
}

.dijitEditorDisabled .dijitToolbar {
  display: none;
}

/* Buttons with text are smaller in the pane's */
.SemanticObjectPane .dijitButtonNode .dijitButtonText {
  font-size: 75%;
}

/* </editor-fold> */

/* <editor-fold desc="Labels"> */

.SemanticObjectPane label {
  color: darkslategrey;
  font-weight: bold;
  font-size: 90%;
}

.SemanticObjectPane label.fixedLabel {
  position: absolute;
  width: 75px; /* see .dijitTextBox.afterLabel */
  display: inline-block;
  padding-top: 0.4ex;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.SemanticObjectPane fieldset {
  border-style: solid;
  border-color: gray;
  border-width: 1px;
  padding: 5px;
  margin-top: 10px;
  margin-bottom: 10px;
}

/* </editor-fold> */

/* <editor-fold desc="Layout"> */

.SemanticObjectPane .fields.dijitLayoutContainerPane {
  padding: 0; /* override dijit ContentPane setting */
}

.SemanticObjectPane .dijitBorderContainer-child {
  border-style: none;
  border-width: 0;
}

.SemanticObjectPane .dijitGutterV {
  width: 10px;
}

.SemanticObjectPane .dijitTabPaneWrapper,
.SemanticObjectPane .dijitTabContainerTop-child {
  padding: 0;
  background-color: transparent;
}

.SemanticObjectPane .dijitAccordionContainer .dijitAccordionChildWrapper,
.SemanticObjectPane .dijitAccordionContainer .dijitAccordionContainer-child,
.SemanticObjectPane .dijitAccordionContainer .dijitAccordionInnerContainer {
  padding: 0;
  background-color: transparent;
}

.SemanticObjectPane .dijitAccordionContainer .dijitAccordionChildWrapper,
.SemanticObjectPane .dijitAccordionContainer .dijitAccordionInnerContainer {
  border-style: none;
  border-width: 0;
}

.SemanticObjectPane .dijitAccordionContainer .dijitAccordionChildWrapper {
  margin: 0;
}

/* </editor-fold> */

/* <editor-fold desc="Lists"> */

.SemanticObjectPane .dgrid-no-data,
.SemanticObjectPane .dgrid-loading {
  width: 100%;
  text-align: center;
  font-style: italic;
  font-size: 75%;
  color: gray;
}

.SemanticObjectPane .dgrid-scroller {
  overflow-y: auto;
}

/* </editor-fold> */

/* <editor-fold desc="Properties"> */

.SemanticObjectPane .properties .propertiesTop {
  height: 36px;  /* icon button + padding */
  padding: 0;
}

.SemanticObjectPane .properties .propertiesTop label {
  line-height: 35px; /* icon */ /* IDEA: isn't margin top better? */
}

.SemanticObjectPane .properties .propertiesTop .dijitButton,
.SemanticObjectPane .properties .propertiesTop .dijitDropDownButton {
  position: absolute;
  right: 0;
  bottom: 5px;
  margin-right: 0;
}

.SemanticObjectPane .properties .dgrid.dgrid-grid{
  margin-left: 0;
  margin-right: 0;
  border-style: none !important;
  border-width: 0! important;
  border-color: transparent !important;
  background-color: transparent !important;
}

/* </editor-fold> */

/* <editor-fold desc="Extra Buttons"> */

.extraButtons .dijitButton,
.extraButtons .dijitDropDownButton,
.extraButtons .dijitToggleButton{
  float: right;
}

/* </editor-fold> */

/* <editor-fold desc="Dangerous Operation"> */

.dijitMenuItem.dangerousOperation {
  color: #000000;
  background-color: #ffff00;
  border-style: solid;
  border-width: 4px;
  border-color: #000000;
  font-weight: bold;
}

.dijitMenuItem.dangerousOperation.dijitMenuItemSelected,
.dijitMenuItem.dangerousOperation.dijitMenuItemSelected .dijitMenuItemLabel,
.dijitMenuItem.dangerousOperation.dijitMenuItemSelected .dijitMenuItemIconCell,
.dijitMenuItem.dangerousOperation.dijitMenuItemSelected .dijitMenuItemAccelKey,
.dijitMenuItem.dangerousOperation.dijitMenuItemSelected .dijitMenuArrowCell {
  color: white !important;
  background-color: red !important;
  border-color: white !important;
}

.warningIcon {
  background-image: url('img/warning.png');
  background-repeat: no-repeat;
  width: 18px;
  height: 18px;
  text-align: center;
}

/* </editor-fold> */
